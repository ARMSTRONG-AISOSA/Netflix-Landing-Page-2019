:root {
  --primary-colour: #e50914;
  --dark-color: #141414;
}

* {
  /* This takes off the default margin of the html document. including p(paragraphs and other elements) */
  margin: 0;

  /* This resets the default padding to zero */
  padding: 0;

  /* This makes it so that padding doesn't affect width */
  box-sizing: border-box;
}

body {
  font-family: Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  background: black;
  color: #999;
}

ul {
  list-style: none;
}

h1,
h2,
h3,
h4 {
  color: rgb(255, 255, 255);
}

a {
  color: #fff;
  text-decoration: none;
}

p {
  /* .5em is 8px as the default is 16px. */
  margin: 0.5em 0;
}

img {
  /* This makes the images take 100% of the wdth of its container.*/
  width: 100%;
}

.showcase {
  width: 100%;
  height: 95vh;

  /* We do this because we are going to position somethings absolute within it */
  position: relative;

  background: url("./Items/NetflixBackgroundBanner.jpg") no-repeat center
    center/cover;
}

/* To add backgroung element like the shadow we can either use a psuedoclass or before & :after. */

.showcase::after {
  content: "";

  /* This makes it positioned absolute to the showcase which is already positioned relative. */
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 1;
  background: rgba(0, 0, 0, 0.5);

  /* Inset: changes the shadow from an outer shadow (outset) to an inner shadow */
  box-shadow: inset 110px 90px 250px rgba(0, 0, 0, 0.7),
    inset -110px -90px 250px rgba(0, 0, 0, 0.7);
}

.showcase-top {
  /* Because the logo and link would be positioned absolute within it. */
  position: relative;
  height: 90px;
  z-index: 2;
}

.showcase-top img {
  width: 170px;
  /* We are positioning it absolute to showcase-top which is what contains it. */
  position: absolute;
  top: 50%;
  left: 50%;
  /* The top and left 50% accounts for the height of the image so to compensate/take these out so its truly centered, we use transform and translate to take 50% of the height and width of the image. */
  transform: translate(-50%, -50%);
}

.showcase-top a {
  position: absolute;
  top: 50%;
  right: 0%;
  transform: translate(-50%, -50%);
}

.showcase-content {
  position: relative;
  margin: auto;
  display: flex;

  /* Done to line everythi ng within the show case content vertically */
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  margin-top: 8.5rem;
  z-index: 2;
}

.showcase-content h1 {
  font-weight: 700;
  font-size: 5.2rem;
  list-style-type: 1.1em;
  margin: 0 0 2rem;
}

.showcase-content p {
  text-transform: uppercase;
  color: #fff;
  font-weight: 400;
  font-size: 1.9rem;
  line-height: 1.25em;
  margin: 0 0 2rem;
}

/* Tabs */
.tabs {
  background: var(--dark-color);
  padding: 1rem;
  border-bottom: 3px solid #3d3d3d;
}

.tabs .container {
  display: grid;

  /* To generate 3 even rows */
  /* grid-template-columns: 1fr 1fr 1fr; */
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 1rem;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.tabs p {
  font-size: 1.2rem;
  padding-top: 0.5rem;
}

/* > div means targeting the direct div */
.tabs .container > div {
  padding: 1.4rem 0;
}

.tabs .container > div:hover {
  color: #fff;
  cursor: pointer;
}

.tab-border {
  border-bottom: var(--primary-colour) 4px solid;
}

#tab-1-content .tab-1-content-inner {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 2rem;
  align-items: center;
  justify-content: center;
}

/* Tab Content */
.tab-content {
  padding: 3rem 0;
  background: #000;
  color: #fff;
}

/* Hide content initially */
#tab-1-content,
#tab-2-content,
#tab-3-content {
  display: none;
}

.show {
  /* Important makes it takes precidence */
  display: block !important;
}

#tab-2-content .tab-2-content-top {
  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-gap: 1rem;
  justify-content: center;
  align-items: center;
}

#tab-2-content .tab-2-content-bottom {
  margin-top: 2rem;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 1rem;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.tab-3-content-grid {
  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-gap: 1rem;
  justify-content: center;
  align-items: center;
}

.table {
  width: 100%;
  margin-top: 2rem;
  border-collapse: collapse;
  border-spacing: 0;
}

.table thead th {
  text-transform: uppercase;
  padding: 0.8rem;
}

.table tbody tr td {
  color: #999;
  padding: 0.8rem 1.2rem;
  text-align: center;
}

/* To target every table body (first) column  */
.table tbody tr td:first-child {
  text-align: left;
}

/* To target every odd row  */
.table tbody tr:nth-child(odd) {
  background: #222;
}

/* The footer wasn't placed in a container because it would be wider than it. */
/* Footer */

.footer {
  max-width: 75%;
  margin: 1rem auto;
  overflow: auto;
}

.footer,
.footer a {
  color: #999;
  font-size: 0.9rem;
}

.footer p {
  margin-bottom: 1.5rem;
}

.footer .footer-cols {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 2rem;
}

.footer li {
  line-height: 1.9em;
}

/*overflow specifies whether to clip the content or to add scrollbars when the content of an element is too big to fit in the specified area.

hidden - The overflow is clipped, and the rest of the content will be invisible
NB: The overflow property only works for block elements with a specified height. */

/* container */
.container {
  max-width: 70%;
  margin: auto;
  overflow: hidden;
  padding: 0 1.8rem;
}

.scroll-bar-auto {
  overflow: auto;
}

/*  Text Styles */
.text-xl {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.text-lg {
  font-size: 1.8rem;
  margin-bottom: 1rem;
}

.text-md {
  font-size: 1.45rem;
  margin-bottom: 1rem;
}

.text-center {
  text-align: center;
}

.text-dark {
  color: #999999;
}

/* Buttons */
.btn {
  /* A block-level element always starts on a new line and takes up the full width available. An inline element does not start on a new line and it only takes up as much width as necessary. */
  display: inline-block;
  background: var(--primary-colour);
  color: #fff;
  padding: 0.4rem 1.3rem;
  font-size: 1rem;
  text-align: center;
  border: none;
  cursor: pointer;

  /* This comes in mostly handy when there are multiple button place besides each other (with in-line block displa)y */
  margin-right: 0.5em;
  /* outline: solid 2px #999; */
  outline: none;
  box-shadow: 0 1px 0 rgb(0, 0, 0, 0.45);
  border-radius: 2.5px;
  transition: all 750ms;
}

.btn:hover {
  opacity: 0.75;
  transition: all 1000ms;
}

.btn-rounded {
  border-radius: 6px;
}

.btn-xl {
  font-size: 2rem;
  padding: 1.5rem 2.1rem;
  text-transform: uppercase;
}

.btn-lg {
  font-size: 1rem;
  padding: 0.8rem 1.3rem;
  text-transform: uppercase;
}

/* ============== Media Query ===================== */

@media (max-width: 960px) {
  .container {
    max-width: 75%;
  }

  .showcase {
    height: 70vh;
  }

  .hide-sm {
    display: none;
  }

  .showcase-top img {
    top: 30%;
    left: 5%;
    transform: translate(0);
  }

  .showcase-content h1 {
    font-size: 3.6rem;
    line-height: 0.9em;
  }

  .showcase-content p {
    font-size: 1.45rem;
  }

  .footer {
    max-width: 80%;
  }

  .footer .footer-cols {
    grid-template-columns: repeat(2, 1fr);
  }

  .btn-xl {
    font-size: 1.4rem;
    padding: 1.3rem 1.9rem;
  }

  .btn-lg {
    font-size: 1.25rem;
  }
  .btn-md {
    font-size: 1rem;
  }
}

@media (max-width: 700px) {
  .footer {
    max-width: 85%;
  }

  .container {
    max-width: 85%;
  }

  .showcase::after {
    background: rgba(0, 0, 0, 0.4);
    box-shadow: inset 80px 80px 250px rgba(0, 0, 0, 0.7), inset -80px -80px 250px rgba(0, 0, 0, 0.7);
  }

  #tab-1-content .tab-1-content-inner {
    grid-template-columns: 1fr;
  }

  #tab-2-content .tab-2-content-top {
    /* grid-template-columns: 1fr; */
    display: block;
    text-align: center;
  }

  #tab-2-content .tab-2-content-bottom {
    grid-template-columns: 1fr;
  }

  /* #tab-1-content .tab-1-content-inner {
    grid-template-columns: 1fr;
  } */
}
